import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
// import Link from 'next/link';
// import { usePathname } from 'next/navigation';
// import { motion } from 'framer-motion';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const navItems = [
  { href: '/photos', label: 'Photos' },
  { href: '/videos', label: 'Videos' },
  { href: '/about', label: 'About' },
  { href: '/contact', label: 'Contact' },
];

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
    // const pathname = usePathname();

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
         {/* <motion.nav
          initial={{ y: -50, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          transition={{ duration: 0.5 }}
          style={{
            display: 'flex',
            justifyContent: 'center',
            gap: '2rem',
            padding: '1rem 0',
            backgroundColor: '#111',
          }}
        >
          {navItems.map(({ href, label }) => (
            <motion.div
              key={href}
              whileHover={{ scale: 1.1, color: '#ff0055' }}
              style={{ listStyle: 'none' }}
            >
              <Link
                href={href}
                style={{
                  color: pathname === href ? '#ff0055' : '#eee',
                  textDecoration: 'none',
                  fontWeight: pathname === href ? 'bold' : 'normal',
                  fontSize: '1.2rem',
                }}
              >
                {label}
              </Link>
            </motion.div>
          ))}
        </motion.nav>
        <main
          style={{
            maxWidth: '1200px',
            margin: '2rem auto',
            padding: '0 1rem',
            minHeight: '80vh',
          }}
        > */}
        {children}
        {/* </main> */}
      </body>
    </html>
  );
}
